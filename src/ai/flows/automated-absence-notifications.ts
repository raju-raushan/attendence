// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow for sending notifications to students absent for three consecutive lectures.
 *
 * - checkAndNotifyAbsences - A function that checks attendance and sends notifications.
 * - CheckAndNotifyAbsencesInput - The input type for the checkAndNotifyAbsences function.
 * - CheckAndNotifyAbsencesOutput - The return type for the checkAndNotifyAbsences function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CheckAndNotifyAbsencesInputSchema = z.object({
  studentId: z.string().describe('The ID of the student.'),
  absences: z.array(z.object({
    date: z.string().describe('The date of the lecture (YYYY-MM-DD).'),
    course: z.string().describe('The course for which the student was absent.'),
  })).describe('An array of the student\'s recent absences.'),
});
export type CheckAndNotifyAbsencesInput = z.infer<typeof CheckAndNotifyAbsencesInputSchema>;

const CheckAndNotifyAbsencesOutputSchema = z.object({
  notificationSent: z.boolean().describe('Whether a notification was sent to the student.'),
});
export type CheckAndNotifyAbsencesOutput = z.infer<typeof CheckAndNotifyAbsencesOutputSchema>;

export async function checkAndNotifyAbsences(input: CheckAndNotifyAbsencesInput): Promise<CheckAndNotifyAbsencesOutput> {
  return checkAndNotifyAbsencesFlow(input);
}

const absenceNotificationPrompt = ai.definePrompt({
  name: 'absenceNotificationPrompt',
  input: {schema: CheckAndNotifyAbsencesInputSchema},
  output: {schema: CheckAndNotifyAbsencesOutputSchema},
  prompt: `You are an attendance notification system for a school.

  A student with ID {{{studentId}}} has been absent for the following lectures:

  {{#each absences}}
  - {{date}} - {{course}}
  {{/each}}

  Determine if the student has been absent for three or more consecutive lectures. If so, send a notification to the student, and set notificationSent to true.
  If fewer than three consecutive lectures have been missed, do not send a notification, and set notificationSent to false.
  Respond in JSON format.
  `,
});

const checkAndNotifyAbsencesFlow = ai.defineFlow(
  {
    name: 'checkAndNotifyAbsencesFlow',
    inputSchema: CheckAndNotifyAbsencesInputSchema,
    outputSchema: CheckAndNotifyAbsencesOutputSchema,
  },
  async input => {
    if (input.absences.length >= 3) {
      const {output} = await absenceNotificationPrompt(input);
      return output!;
    }
    return {notificationSent: false};
  }
);

